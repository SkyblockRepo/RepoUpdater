services:
  api:
    image: api
    restart: unless-stopped
    build:
      context: .
      dockerfile: Api/Dockerfile
    environment:
      - POSTGRES_CONNECTION="Server=database;Port=5432;Database=${POSTGRES_DB:-repoapi};Username=${POSTGRES_USER:-user};Password=${POSTGRES_PASSWORD:?POSTGRES_PASSWORD env variable is required};Include Error Detail=true"
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Production}
      - ASPNETCORE_URLS=http://+:7007;http://+:9103
    ports:
      - "7007"
      - "9103"
    depends_on:
      - database
      - cache
    networks:
      - skyblockrepo-network
  database:
    image: postgres:18beta3-alpine
    restart: unless-stopped
    env_file:
      - .env
    command: -c 'max_connections=${POSTGRES_MAX_CONNECTIONS:-100}'
    ports:
      - '${POSTGRES_PORT:?POSTGRES_PORT env variable is required}:5432'
    expose:
      - '${POSTGRES_PORT:?POSTGRES_PORT env variable is required}'
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - skyblockrepo-network
  cache:
    image: redis:8-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD:?REDIS_PASSWORD env variable is required}
    ports:
      - '${REDIS_PORT:?REDIS_PORT env variable is required}:6379'
    expose:
      - '${REDIS_PORT:?REDIS_PORT env variable is required}'
    volumes:
      - redis-data:/data
    networks:
      - skyblockrepo-network
  
volumes:
    db-data: {}
    redis-data: {}
  
networks:
    skyblockrepo-network:
        driver: bridge