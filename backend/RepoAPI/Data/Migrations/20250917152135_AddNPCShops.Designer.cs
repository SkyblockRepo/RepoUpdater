// <auto-generated />
using System;
using System.Text.Json;
using EliteFarmers.HypixelAPI.DTOs;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RepoAPI.Data;
using RepoAPI.Features.Items.Models;

#nullable disable

namespace RepoAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250917152135_AddNPCShops")]
    partial class AddNPCShops
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RepoAPI.Core.Models.DataIngestionBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.ToTable("DataIngestionBatches");
                });

            modelBuilder.Entity("RepoAPI.Core.Models.PendingDeprecation", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("integer");

                    b.Property<int>("EntityIdToDeprecate")
                        .HasColumnType("integer");

                    b.Property<string>("EntityType")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("BatchId", "EntityIdToDeprecate", "EntityType");

                    b.ToTable("PendingDeprecations");
                });

            modelBuilder.Entity("RepoAPI.Core.Models.PendingEntityChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BatchId")
                        .HasColumnType("integer");

                    b.Property<JsonDocument>("EntityData")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.ToTable("PendingEntityChanges");
                });

            modelBuilder.Entity("RepoAPI.Features.Enchantments.Models.SkyblockEnchantment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("IngestedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<bool>("Latest")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("integer");

                    b.Property<int>("MinLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("RawTemplate")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("IngestedAt");

                    b.HasIndex("InternalId");

                    b.HasIndex("Name");

                    b.HasIndex("InternalId", "Latest");

                    b.ToTable("SkyblockEnchantments");
                });

            modelBuilder.Entity("RepoAPI.Features.Items.Models.SkyblockItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<ItemResponse>("Data")
                        .HasColumnType("jsonb");

                    b.Property<ItemFlags>("Flags")
                        .HasColumnType("jsonb");

                    b.Property<DateTimeOffset>("IngestedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<bool>("Latest")
                        .HasColumnType("boolean");

                    b.Property<string>("Lore")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<double>("NpcValue")
                        .HasColumnType("double precision");

                    b.Property<string>("RawTemplate")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("IngestedAt");

                    b.HasIndex("InternalId")
                        .IsUnique()
                        .HasFilter("\"Latest\" = true");

                    b.HasIndex("Name");

                    b.ToTable("SkyblockItems");
                });

            modelBuilder.Entity("RepoAPI.Features.Items.Models.SkyblockItemRecipeLink", b =>
                {
                    b.Property<string>("InternalId")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("RecipeId")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.HasKey("InternalId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("SkyblockItemRecipeLinks");
                });

            modelBuilder.Entity("RepoAPI.Features.NPCs.Models.SkyblockNpc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("IngestedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<bool>("Latest")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("RawTemplate")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("IngestedAt");

                    b.HasIndex("InternalId");

                    b.HasIndex("Name");

                    b.HasIndex("InternalId", "Latest");

                    b.ToTable("SkyblockNpcs");
                });

            modelBuilder.Entity("RepoAPI.Features.Pets.Models.SkyblockPet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("IngestedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<bool>("Latest")
                        .HasColumnType("boolean");

                    b.Property<string>("Lore")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("RawTemplate")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("IngestedAt");

                    b.HasIndex("InternalId");

                    b.HasIndex("Name");

                    b.HasIndex("InternalId", "Latest");

                    b.ToTable("SkyblockPets");
                });

            modelBuilder.Entity("RepoAPI.Features.Recipes.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<string>("Slot")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("RepoAPI.Features.Recipes.Models.SkyblockRecipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("IngestedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<bool>("Latest")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("ResultInternalId")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<int>("ResultQuantity")
                        .HasColumnType("integer");

                    b.Property<int?>("SkyblockItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.HasIndex("IngestedAt");

                    b.HasIndex("Name");

                    b.HasIndex("ResultInternalId");

                    b.HasIndex("SkyblockItemId");

                    b.HasIndex("Type");

                    b.HasIndex("ResultInternalId", "Latest");

                    b.ToTable("SkyblockRecipes");
                });

            modelBuilder.Entity("RepoAPI.Features.Shops.Models.SkyblockShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("IngestedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<bool>("Latest")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("RawTemplate")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("IngestedAt");

                    b.HasIndex("InternalId");

                    b.HasIndex("Name");

                    b.HasIndex("InternalId", "Latest");

                    b.ToTable("SkyblockShops");
                });

            modelBuilder.Entity("RepoAPI.Features.Zones.Models.SkyblockZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("IngestedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<bool>("Latest")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("RawTemplate")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("IngestedAt");

                    b.HasIndex("InternalId");

                    b.HasIndex("Name");

                    b.HasIndex("InternalId", "Latest");

                    b.ToTable("SkyblockZones");
                });

            modelBuilder.Entity("RepoAPI.Core.Models.PendingDeprecation", b =>
                {
                    b.HasOne("RepoAPI.Core.Models.DataIngestionBatch", null)
                        .WithMany("PendingDeprecations")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RepoAPI.Core.Models.PendingEntityChange", b =>
                {
                    b.HasOne("RepoAPI.Core.Models.DataIngestionBatch", null)
                        .WithMany("PendingChanges")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RepoAPI.Features.Recipes.Models.RecipeIngredient", b =>
                {
                    b.HasOne("RepoAPI.Features.Recipes.Models.SkyblockRecipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RepoAPI.Features.Recipes.Models.SkyblockRecipe", b =>
                {
                    b.HasOne("RepoAPI.Features.Items.Models.SkyblockItem", null)
                        .WithMany("Recipes")
                        .HasForeignKey("SkyblockItemId");
                });

            modelBuilder.Entity("RepoAPI.Core.Models.DataIngestionBatch", b =>
                {
                    b.Navigation("PendingChanges");

                    b.Navigation("PendingDeprecations");
                });

            modelBuilder.Entity("RepoAPI.Features.Items.Models.SkyblockItem", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("RepoAPI.Features.Recipes.Models.SkyblockRecipe", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
